#!/bin/bash

# installation:
# - copy in your favourite directory, e.g. : /home/sebastiani/bin
# put in your ~/.bashrc :
# - alias doclink='bash /home/sebastiani/bin/doclink'

# Changelog:
# 1. 2020-05-20: first relase
# 2. 2020-06-08: added [<COPY-DIR>] option
# 3. 2020-10-07: better comments and help with examples. Code review.

version=3

PEGASO_START_SCRIPT_PWD="$(pwd)"

# this is a code snipped:
# from http://stackoverflow.com/questions/59895/can-a-bash-script-tell-what-directory-its-stored-in
# to understand what directory it's stored in bash script itself

PEGASO_SOURCE="${BASH_SOURCE[0]}"
while [ -h "$PEGASO_SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  PEGASO_DIR="$( cd -P "$( dirname "$PEGASO_SOURCE" )" && pwd )"
  PEGASO_SOURCE="$(readlink "$PEGASO_SOURCE")"
  [[ $PEGASO_SOURCE != /* ]] && PEGASO_SOURCE="$PEGASO_DIR/$PEGASO_SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
PEGASO_SCRIPT_DIR="$( cd -P "$( dirname "$PEGASO_SOURCE" )" && pwd )"
PEGASO_SCRIPT_FILE=$(basename "$PEGASO_SOURCE")
# end of snipped

if [ -z "$SVN_ROOT" ]; then
    # echo SET
    export SVN_ROOT=$HOME/svn
fi

function abort () {
    CMD="$(basename $0)"
    cat <<EOF
    $CMD version $version
    create in the current directory a symlink to a certain files
    (asking to user) based on a given pattetn finding then in a 
    svn repository set.

    sintax: $CMD <FILE-PATH>
                 directly link the file locally, no questions.
            $CMD { <DIR>|<DIR-PATTERN> } <PATTERN> [<COPY-DIR>]
                 if first param is a dir look in it, otherwice look in all
                 directories mathing \$SVN_ROOT/<DIR-PATTERN>*
                 if <COPY-DIR> is also given, copy the file to
                 that directory too appending rXXX to the basename
                 where XXX is the last svn commit revision of the file.

    environment:
            SVN_ROOT the root of all svn repositories to look for in
                     default value is \$HOME/svn
    examples:
            0) we assume that all SVN repos are in this local root:
            export SVN_ROOT=$HOME/svn

	    1) search doc '_112' in a repo:
            # cd $HOME/svn/FOO-DOC/doc
	    # $CMD . _112
            or without 'cd':
            # $CMD $HOME/svn/OVCS-DOC/doc _112

	    2) search all _112 code in all FOO related repos:
               (assumes to have $HOME/svn/FOO-DOC and $HOME/svn/FOO-release)
            # $CMD FOO _112

	    3) search all FOO_110 in all FOO related repos:
            # $CMD FOO FOO_110

	    4) also copy chossed files from FOO-DOC into $HOME:
            # $CMD FOO-DOC _110 $HOME

EOF

   if [ -n "$1"  ] ;then
       echo "ERROR: $1"
       echo
   fi


    exit 1
}

# cd "$PEGASO_SCRIPT_DIR"
# cd .. || exit 1
# export PEGASO_ROOT="$(pwd)"
# PEGASO_PARENT_ROOT="$(dirname "$PEGASO_ROOT")"
# echo "$PEGASO_ROOT"
# echo "$PEGASO_PARENT_ROOT"


test $# == 0 && abort 

cd "$PEGASO_START_SCRIPT_PWD" || abort "cannot change dir: $PEGASO_START_SCRIPT_PWD"

DIR="$1"
PATTERN="$2"
COPYDIR="$3"
if [ -f "$DIR" -a -z "$PATTERN" ] ; then
	# if is a file and no PATTERN, link this with no question:
	ln -sfv "$DIR" .
	exit $?
fi
if [ -n "$COPYDIR" -a ! -d "$COPYDIR" ] ;then
    abort "$COPYDIR is not a directory"
fi

test -n "$PATTERN" || abort "no $PATTERN"

declare -a DIRS 

dirlist=$(mktemp)

if [ -d "$DIR" ]; then
    echo "$DIR" > $dirlist
else
    # abort "not a dir: $DIR"
    ls -1d "${SVN_ROOT}/${DIR}"* > $dirlist || abort "no pattern found for ${SVN_ROOT}/${DIR}*"
fi

FULL="$(readlink -e "$DIR")"

echo === DIRLIST: ===
cat $dirlist

filelist=$(mktemp)
choosedfile=$(mktemp)
cpfile=$(mktemp)
function finish {
  rm -rf "$filelist $choosedfile $cpfile"
}
trap finish EXIT


find $(cat $dirlist) -iname "*$PATTERN*" -printf "%p\n" > $filelist

echo === FILELIST: ===
cat $filelist | perl -ne 'BEGIN{$n=1;} print "$n $_";$n++'
declare -a RISP
IFS=' ' read -p "What to process? (+=enable -=disable links) [(A)ll/(N)o/[-|+]n1 n2...] " -ra RISP
first="${RISP:0:1}"

if [ "$first" = '+' -o "$first" = '-' ]; then
	RISP="${RISP:1}"
else
	# default
	first="-"
fi

echo LINK MODE IS: $first

if [ "${RISP[0]^^}" != N ]; then
    echo "choosed: ${RISP[@]}"
    export RR="${RISP[@]}"
    case "$first" in
    	'+')
	    xargs_cmd="xargs -n1 ln -s"
	    ;;
	'-')
	    xargs_cmd="echo"
	    ;;
    esac
    if [ "${RISP[0]^^}" == "A" ]; then
	cat $filelist | $xargs_cmd 
    else
	cat $filelist | perl -ne 'BEGIN{ foreach (split(/ /,$ENV{"RR"})) { $h{$_} = 1 } } $i++; print "$_" if($h{$i});' > $choosedfile
	cat $choosedfile | $xargs_cmd
	if [ -n "$COPYDIR" ]; then
	    echo "=== SVN SCAN: === "
	    cat $choosedfile | while read FF; do
		dirname="$(dirname "$FF")"
		filename_base="$(basename -- "$FF")"
		extension="${filename_base##*.}"
		filename="${filename_base%.*}"
		svnver=$(svnversion -c "$FF")
		echo "$filename_base [svn:$svnver]"
		echo cp \"$FF\" \"$COPYDIR/$filename-r$svnver.$extension\" >> $cpfile
		echo echo \"copied $filename-r$svnver.$extension\" >> $cpfile
	    done
	    bash $cpfile
	fi
    fi
    # cat $cpfile
    # find "$FULL" -iname "*$PATTERN*" -exec ln -s {} . \;
fi

if [ "$first" = '+' ]; then
	echo " ======= LOCAL LINKS on '$PATTERN' ============== "
	ls *$PATTERN*
fi

