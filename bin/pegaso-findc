#!/bin/bash

# Changelog:
# 1. 2020-01-26: first version
# 2. 2021-02-05: manage empty PATTERN

version=1

PEGASO_START_SCRIPT_PWD="$(pwd)"

# this is a code snipped:
# from http://stackoverflow.com/questions/59895/can-a-bash-script-tell-what-directory-its-stored-in
# to understand what directory it's stored in bash script itself

PEGASO_SOURCE="${BASH_SOURCE[0]}"
while [ -h "$PEGASO_SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  PEGASO_DIR="$( cd -P "$( dirname "$PEGASO_SOURCE" )" && pwd )"
  PEGASO_SOURCE="$(readlink "$PEGASO_SOURCE")"
  [[ $PEGASO_SOURCE != /* ]] && PEGASO_SOURCE="$PEGASO_DIR/$PEGASO_SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
PEGASO_SCRIPT_DIR="$( cd -P "$( dirname "$PEGASO_SOURCE" )" && pwd )"
PEGASO_SCRIPT_FILE=$(basename "$PEGASO_SOURCE")
# end of snipped

function abort () {
    CMD="$(basename $0)"
    cat <<EOF
    $CMD version $version

    syntax:
        $CMD <symbol-pattern> [<pattern-string>]

    find a c symbol in a dir tree combining find/grep commands

    examples:	    
    	$CMD "*.h" my_procedure_name
        $CMD "*.c" My_Indentifier_Name
EOF

   if [ -n "$1"  ] ;then
       echo "ERROR: $1"
       echo
   fi

   exit 1
}

# cd "$PEGASO_SCRIPT_DIR"
# cd .. || exit 1
# export PEGASO_ROOT="$(pwd)"
# PEGASO_PARENT_ROOT="$(dirname "$PEGASO_ROOT")"
# echo "$PEGASO_ROOT"
# echo "$PEGASO_PARENT_ROOT"

test $# == 0 && abort 

cd "$PEGASO_START_SCRIPT_PWD" || abort "cannot change dir: $PEGASO_START_SCRIPT_PWD"

PATTERN="$1"
STRING="$2"

if [ -n "$STRING" ]; then
	find -name "$PATTERN" -exec grep --color=auto -n "$STRING" {} \; -print
else
	find -name "$PATTERN"
fi
