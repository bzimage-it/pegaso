#!/bin/bash

PEGASO_START_SCRIPT_PWD=$(pwd)

# this is a code snipped:
# from http://stackoverflow.com/questions/59895/can-a-bash-script-tell-what-directory-its-stored-in
# to understand what directory it's stored in bash script itself

PEGASO_SOURCE="${BASH_SOURCE[0]}"
while [ -h "$PEGASO_SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  PEGASO_DIR="$( cd -P "$( dirname "$PEGASO_SOURCE" )" && pwd )"
  PEGASO_SOURCE="$(readlink "$PEGASO_SOURCE")"
  [[ $PEGASO_SOURCE != /* ]] && PEGASO_SOURCE="$PEGASO_DIR/$PEGASO_SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
PEGASO_SCRIPT_DIR="$( cd -P "$( dirname "$PEGASO_SOURCE" )" && pwd )"
PEGASO_SCRIPT_FILE=$(basename "$PEGASO_SOURCE")
# end of snipped

orig="$(pwd)"

cd "$PEGASO_SCRIPT_DIR"
cd .. || exit 1
export PEGASO_ROOT="$(pwd)"

# PEGASO_PARENT_ROOT="$(dirname "$PEGASO_ROOT")"
# echo "$PEGASO_ROOT"
# echo "$PEGASO_PARENT_ROOT"

function syntax() {
	cat <<EOF
 $PEGASO_SCRIPT_FILE 
 
 remove-unversioned-all     | svn cleanup --remove-unversioned --remove-ignored
 co-smart-1 <BASEREPO>      | get trunk,tags,branch but only trunk as infinity
 co-smart-2                 | update current dir with immediates (requires 'cd' before)
 co-smart-3                 | update a sub-dir with infinity (requires 'cd' before)
 status-egrep <STATUS-LETTER-EGREP-FILTER> [<optional-svn-status-args> ...]
                            | filter 'status' output based on egrep expression; to filter by svn status letter: '^M' '^C'...
 interactive-commit-by-file | commit file-by-file and write different comment 
 refinfo <FILE1> <FILE2> ...| print concise reference information grepped from "svn info"
EOF
}


function by_status_letter() {
	local GREP_OPT="$1"
	local OTHER_OPS="$2"
	svn status $OTHER_OPS | egrep "$GREP_OPT" | awk -- '{print $2}'
}

cmd="$1"
shift
cd "$orig" || exit 2

case "$cmd" in
	remove-unversioned-all)
	    svn cleanup --remove-unversioned --remove-ignored
	    ;;
	co-smart-1)
	    svn co --depth immediates $*
 	    ;;
	co-smart-2)
	    svn update --set-depth immediates .
 	    ;;
	co-smart-3)
	    svn update --set-depth infinity .
	    ;;
	status-egrep)
	    GREP_OPT="$1"
	    if [ -z "$GREP_OPT" ]; then
		    echo "missed option"
		    syntax
	    fi
	    OTHER_OPS="$2"
	    by_status_letter "$GREP_OPT" "$OTHER_OPS"
	    ;;	
	refinfo)
	    echo "!!!! REMEMBER TO RUN SVN UPDATE FIRST !!!!!!" 1>&2
 	    for F in "$@"; do
 	    	echo
 	    	svn info "$F" | egrep "^(Re(lative|vision)|Last)"
 	    done
	    ;;
	interactive-commit-by-file)
	    t=$(mktemp)
	    by_status_letter "^M" > $t
	    n=$(cat $t | wc -l)
	    while [ $n -gt 0 ] ; do
	    	F=$(head -n $n $t | tail -n 1)
	    	let n-=1
	    	echo "===[$n]==| $F |====="
	    	svn diff "$F"
	    	read -p "SVN COMMENT (Ctrl+C to abort): " COMMENT
		svn commit -m "$COMMENT" "$F" || exit 2
	    done 
	    ;;
	*)
		echo "unknown param $cmd"
		syntax
		;;
esac

